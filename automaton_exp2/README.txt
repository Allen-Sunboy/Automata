操作系统：win10
架构：VSCode
编译：MinGW CMake

大致是使用了方案三，即直接对这个nfa进行操作，比如添加转移规则。
相当于是全局nfa，并且状态编号是总体上是递增的（除了贪婪处理的情况），最后一个状态即为终态。
使用递归调用函数处理的方式，对语法分析树遍历处理。
由于nfa路径访问是使用了DFS栈处理，所以对于同一出发的状态，越晚入栈的路径（规则）反而会越靠近栈顶，越优先访问。
所以在贪婪处理方面，是根据这种情况安排Rule的添加顺序的。

个人认为，本次实验CMake相关文件，比如CMakeLists.txt可能有些瑕疵，当自己电脑的MinGW的文件路径包含空格的时候，build过程会报错。
可能没考虑到这种情况？如果能麻烦处理一下这个问题当然是最好的。
比如我原先的路径为 D:\Program Files\mingw64\bin
中间有空格，导致build报错，我就把mingw64移动到了不包含空格的文件路径，后面就没报错了。

个人认为，有个样例可能有点小问题，样例06.txt，同时也是本实验讲解pdf里的样例。
\w+@(mails?)?\.tsinghua\.edu\.cn
可能以下这样子更符合实际情况：
\w+@(mails?\.)?tsinghua\.edu\.cn
比如对于 xxx@tsinghua.edu.cn 这种邮箱，就能匹配了。
当然，这个问题不大，只是样例而已。

以上所有内容我当然没去改动，只是稍微反馈一下。总之感谢助教，助教辛苦啦。
